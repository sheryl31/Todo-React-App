{"version":3,"sources":["components/TodoList.module.css","components/AddListForm.js","components/Form.js","components/Todo.js","components/TodoList.js","components/Popup.js","App.js","reportWebVitals.js","index.js","components/AddListForm.module.css"],"names":["module","exports","AddListForm","formatLists","setFormatLists","togglePop","useState","inputText","setInputText","value","onChange","e","target","type","className","styles","form_todo_list","placeholder","id","onClick","preventDefault","text","Math","random","todos","Form","setTodos","length","completed","Todo","todo","map","item","filter","el","TodoList","todoContainerToggle","setActiveID","editFormatList","formatTodo","changeTitleFormatLists","myRef","React","createRef","clickHandler","useCallback","selectTextHandler","current","select","useEffect","onSubmit","title_todolist","onFocus","size","ref","Popup","deleteEmpty","window","scrollTo","App","seen","setSeen","setTodoContainerToggle","activeID","edit","setEdit","currentList","setCurrentList","toggleEdit","formatList","find","cur_formatTodo","localStorage","getItem","setItem","JSON","stringify","localformatLists","parse","getLocalTodos","updateCurrentList","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,eAAiB,mC,iLCqCpBC,EAlCK,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,eAAgBC,EAAgB,EAAhBA,UAAgB,EAChCC,mBAAS,IADuB,mBAC3DC,EAD2D,KAChDC,EADgD,KAiBlE,OACE,iCACE,uBACEC,MAAOF,EACPG,SAlBmB,SAACC,GACxBH,EAAaG,EAAEC,OAAOH,QAkBlBI,KAAK,OACLC,UAAWC,IAAOC,eAClBC,YAAY,sBACZC,GAAG,SAEL,wBAAQC,QApBc,SAACR,GACzBA,EAAES,iBACFhB,EAAe,GAAD,mBACTD,GADS,CAEZ,CAAEkB,KAAMd,EAAWW,GAAoB,IAAhBI,KAAKC,SAAiBC,MAAO,OAEtDhB,EAAa,IACbH,KAasCQ,KAAK,SAASC,UAAU,cAA5D,SACE,mBAAGA,UAAU,6BCINW,EAlCF,SAAC,GAAyB,IAAvBD,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,SAAe,EACFpB,mBAAS,IADP,mBAC7BC,EAD6B,KAClBC,EADkB,KAkBpC,OACE,iCACE,uBACEC,MAAOF,EACPG,SAnBmB,SAACC,GACxBH,EAAaG,EAAEC,OAAOH,QAmBlBI,KAAK,OACLI,YAAY,aACZH,UAAU,mBAEZ,wBAAQK,QApBc,SAACR,GACzBA,EAAES,iBACEb,EAAUoB,OAAS,IACrBD,EAAS,GAAD,mBACHF,GADG,CAEN,CAAEH,KAAMd,EAAWqB,WAAW,EAAOV,GAAoB,IAAhBI,KAAKC,aAEhDf,EAAa,MAauBM,UAAU,cAAcD,KAAK,SAAjE,SACE,mBAAGC,UAAU,6BCSNe,EArCF,SAAC,GAA+B,IAA7BL,EAA4B,EAA5BA,MAAOE,EAAqB,EAArBA,SAAUI,EAAW,EAAXA,KAmB/B,OACE,sBAAKhB,UAAU,OAAf,UACE,oBAEEA,UAAS,oBAAegB,EAAKF,UAAY,YAAc,IAFzD,SAIGE,EAAKT,MAHDS,EAAKZ,IAKZ,wBAAQC,QAtBY,WACtBO,EACEF,EAAMO,KAAI,SAACC,GACT,OAAIA,EAAKd,KAAOY,EAAKZ,GACZ,2BACFc,GADL,IAEEJ,WAAYI,EAAKJ,YAGdI,OAayBlB,UAAU,eAA5C,SACE,mBAAGA,UAAU,mBAEf,wBAAQK,QA7BU,WACpBO,EAASF,EAAMS,QAAO,SAACC,GAAD,OAAQA,EAAGhB,KAAOY,EAAKZ,QA4BXJ,UAAU,YAA1C,SACE,mBAAGA,UAAU,uB,iBCgDNqB,EA5EE,SAAC,GAQX,IAPLX,EAOI,EAPJA,MACAE,EAMI,EANJA,SACAU,EAKI,EALJA,oBACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,WACAC,EACI,EADJA,uBACI,EAC8BlC,mBAClB,MAAdiC,EAAqBA,EAAWlB,KAAO,IAFrC,mBACGd,EADH,KACcC,EADd,KAKEiC,EAAQC,IAAMC,YAEdC,EAAeC,uBACnB,SAAClC,GACKA,GAAG0B,EAAY1B,EAAG2B,EAAe3B,MAEvC,CAAC0B,EAAaC,IAOVQ,EAAoB,WACxBL,EAAMM,QAAQC,UAkBhB,OAVAC,qBAAU,WACJV,GACFF,EAAYE,EAAWrB,MAExB,CAACkB,IAEJa,qBAAU,WACJV,GAAY/B,EAAa+B,EAAWlB,QACvC,CAACkB,IAGF,gCACE,uBAAMW,SAjBW,SAACvC,GACpBA,EAAES,iBACFoB,EAAuBD,EAAYhC,IAejC,UACE,uBACEE,MAAOF,EACPG,SA5BiB,SAACC,GACxBH,EAAaG,EAAEC,OAAOH,QA4BhBI,KAAK,OACLC,UAAWC,IAAOoC,eAClBC,QAASN,EACTO,KAAM,GACNC,IAAKb,IAEP,sBAAMtB,QAAS2B,EAAmBhC,UAAU,iBAA5C,SACE,mBAAGA,UAAU,2BAGjB,qBACEA,UAAU,kBACVK,QAAS,WACHoB,IAAeH,GAAqBQ,EAAaL,EAAWrB,KAHpE,SAME,oBAAIJ,UAAU,YAAd,SACGU,EAAMO,KAAI,SAACD,GAAD,OACT,cAAC,EAAD,CAAoBN,MAAOA,EAAOE,SAAUA,EAAUI,KAAMA,GAAjDA,EAAKZ,QAFWqB,EAAWrB,UCvBnCqC,EA7CD,SAAC,GAUR,IATLlD,EASI,EATJA,UACAmB,EAQI,EARJA,MACAE,EAOI,EAPJA,SACAa,EAMI,EANJA,WACAH,EAKI,EALJA,oBACAoB,EAII,EAJJA,YACAnB,EAGI,EAHJA,YACAC,EAEI,EAFJA,eACAE,EACI,EADJA,uBAYA,OAJAS,qBAAU,WACRQ,OAAOC,SAAS,EAAG,KAClB,IAGD,sBAAK5C,UAAU,gBAAf,UACE,sBAAMA,UAAU,QAAQK,QAZR,WAClBd,IACAmD,KAUE,kBAGA,sBAAK1C,UAAU,iBAAf,UACE,cAAC,EAAD,CAAMU,MAAOA,EAAOE,SAAUA,IAC9B,qBAAKZ,UAAU,iBAAf,SACE,cAAC,EAAD,CAEEU,MAAOA,EACPE,SAAUA,EACVU,oBAAqBA,EACrBC,YAAaA,EACbC,eAAgBA,EAChBC,WAAYA,EACZC,uBAAwBA,GAPnBD,EAAWrB,aC8IbyC,MA1Kf,WAAgB,IAAD,EACyBrD,mBAAS,IADlC,mBACNH,EADM,KACOC,EADP,OAEaE,mBAAS,IAFtB,mBAENkB,EAFM,KAECE,EAFD,OAGWpB,oBAAS,GAHpB,mBAGNsD,EAHM,KAGAC,EAHA,OAIyCvD,oBAAS,GAJlD,mBAIN8B,EAJM,KAIe0B,EAJf,OAKmBxD,mBAAS,MAL5B,mBAKNyD,EALM,KAKI1B,EALJ,OAMW/B,oBAAS,GANpB,mBAMN0D,EANM,KAMAC,EANA,OAOyB3D,mBAAS,MAPlC,mBAON4D,EAPM,KAOOC,EAPP,KAsBP9D,EAAY,WAChBwD,GAASD,GACTlC,EAAS,IACTW,EAAY,MACZyB,GAAwB1B,IAGpBoB,EAAc,WAClBpD,EAAeD,EAAY8B,QAAO,SAACC,GAAD,OAAQA,EAAGV,MAAMG,OAAS,OAGxDyC,EAAa,WACbF,GAAeA,EAAY1C,MAAMG,OAAS,IAC5CsC,GAASD,GACTF,GAAwB1B,KAItBE,EAAiB,SAACpB,GACtB,IAAImD,EAAalE,EAAYmE,MAAK,SAACtC,GAAD,OAAUA,EAAKd,KAAOA,KACpDmD,GAAcA,EAAW7C,MAAMG,OAAS,IAC1CwC,EAAeE,GACf3C,EAAS2C,EAAW7C,QAEtB4C,KAqBI5B,EAAyBK,uBAAY,SAAC0B,EAAgBlD,GAC1DjB,EACED,EAAY4B,KAAI,SAACC,GACf,OAAIA,EAAKd,KAAOqD,EAAerD,GACtB,2BACFc,GADL,IAEEX,KAAMA,IAGHW,SA0Bb,OAbAiB,qBAAU,YA5EY,WACpB,GAA4C,OAAxCuB,aAAaC,QAAQ,eACvBD,aAAaE,QAAQ,cAAeC,KAAKC,UAAU,SAC9C,CACL,IAAIC,EAAmBF,KAAKG,MAAMN,aAAaC,QAAQ,gBACvDrE,EAAeyE,GACXA,EAAiBlD,QAAQU,EAAYwC,EAAiB,GAAG3D,KAuE/D6D,KACC,IAEH9B,qBAAU,YA3CHzB,GAAUY,IAEE,OAAb2B,GAEJ3D,EACED,EAAY4B,KAAI,SAACC,GACf,OAAIA,EAAKd,KAAO6C,EACP,2BACF/B,GADL,IAEER,MAAM,YAAKA,KAGRQ,QAiCV,CAACR,IAEJyB,qBAAU,WAvFRuB,aAAaE,QAAQ,cAAeC,KAAKC,UAAUzE,IAuE3B,WACxB,GAAK4D,EAAL,CACA,IAAIM,EAAalE,EAAYmE,MAAK,SAACtC,GAAD,OAAUA,EAAKd,KAAO6C,KACpDM,GAAcA,EAAW7C,MAAMG,OAAS,GAC1CwC,EAAeE,IAcjBW,KACC,CAAC7E,IAGF,sBAAKW,UAAU,MAAf,UACE,iCACE,4CAEF,cAAC,EAAD,CACEX,YAAaA,EACbC,eAAgBA,EAChBC,UAAWA,IAGZuD,EACC,cAAC,EAAD,CAEEvD,UAAWA,EACXmB,MAAOA,EACPE,SAAUA,EACVa,WAAYpC,EAAYA,EAAYwB,OAAS,GAC7CS,oBAAqBA,EACrBoB,YAAaA,EACbnB,YAAaA,EACbC,eAAgBA,EAChBE,uBAAwBA,GATnB,WAWL,KAEJ,gCACE,qBACE1B,UACEsB,EAAmB,sCAFvB,SAKIwB,EAeE,KAdAzD,EAAY4B,KAAI,SAACC,EAAMiD,GAAP,OACd,qBAAKnE,UAAU,6BAAf,SACE,cAAC,EAAD,CAEEU,MAAOQ,EAAKR,MACZE,SAAUA,EACVU,oBAAqBA,EACrBC,YAAaA,EACbC,eAAgBA,EAChBC,WAAYP,EACZQ,uBAAwBA,GAPnBR,EAAKd,KAFmC+D,QAexDjB,EACC,cAAC,EAAD,CAEE3D,UAAW+D,EACX5C,MAAO0C,EAAY1C,MACnBE,SAAUA,EACVa,WAAY2B,EACZ9B,oBAAqBA,EACrBoB,YAAaA,EACblB,eAAgBA,EAChBD,YAAaA,EACbG,uBAAwBA,GATnB,WAWL,YC9JG0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAlF,EAAOC,QAAU,CAAC,eAAiB,uC","file":"static/js/main.c629bd57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title_todolist\":\"TodoList_title_todolist__1u9uf\"};","import React, { useState } from \"react\";\r\n\r\nimport styles from \"./AddListForm.module.css\";\r\n\r\nconst AddListForm = ({ formatLists, setFormatLists, togglePop }) => {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const submitListHandler = (e) => {\r\n    e.preventDefault();\r\n    setFormatLists([\r\n      ...formatLists,\r\n      { text: inputText, id: Math.random() * 1000, todos: [] },\r\n    ]);\r\n    setInputText(\"\");\r\n    togglePop();\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        value={inputText}\r\n        onChange={inputTextHandler}\r\n        type=\"text\"\r\n        className={styles.form_todo_list}\r\n        placeholder=\"Add New List Name..\"\r\n        id=\"name\"\r\n      />\r\n      <button onClick={submitListHandler} type=\"submit\" className=\"form_button\">\r\n        <i className=\"fas fa-plus-circle\"></i>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddListForm;\r\n","import React, { useState } from \"react\";\n\nconst Form = ({ todos, setTodos }) => {\n  const [inputText, setInputText] = useState(\"\");\n\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const submitListHandler = (e) => {\n    e.preventDefault();\n    if (inputText.length > 0) {\n      setTodos([\n        ...todos,\n        { text: inputText, completed: false, id: Math.random() * 1000 },\n      ]);\n      setInputText(\"\");\n    }\n  };\n\n  return (\n    <form>\n      <input\n        value={inputText}\n        onChange={inputTextHandler}\n        type=\"text\"\n        placeholder=\"Add Todo..\"\n        className=\"form_todo_list\"\n      />\n      <button onClick={submitListHandler} className=\"form_button\" type=\"submit\">\n        <i className=\"fas fa-plus-circle\"></i>\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst Todo = ({ todos, setTodos, todo }) => {\n  const deleteHandler = () => {\n    setTodos(todos.filter((el) => el.id !== todo.id));\n  };\n\n  const completeHandler = () => {\n    setTodos(\n      todos.map((item) => {\n        if (item.id === todo.id) {\n          return {\n            ...item,\n            completed: !item.completed,\n          };\n        }\n        return item;\n      })\n    );\n  };\n\n  return (\n    <div className=\"todo\">\n      <li\n        key={todo.id}\n        className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}\n      >\n        {todo.text}\n      </li>\n      <button onClick={completeHandler} className=\"complete-btn\">\n        <i className=\"fas fa-check\"></i>\n      </button>\n      <button onClick={deleteHandler} className=\"trash-btn\">\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport Todo from \"./Todo\";\n\nimport styles from \"./TodoList.module.css\";\n\nconst TodoList = ({\n  todos,\n  setTodos,\n  todoContainerToggle,\n  setActiveID,\n  editFormatList,\n  formatTodo,\n  changeTitleFormatLists,\n}) => {\n  const [inputText, setInputText] = useState(\n    formatTodo != null ? formatTodo.text : \"\"\n  );\n\n  const myRef = React.createRef();\n\n  const clickHandler = useCallback(\n    (e) => {\n      if (e) setActiveID(e, editFormatList(e));\n    },\n    [setActiveID, editFormatList]\n  );\n\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const selectTextHandler = () => {\n    myRef.current.select();\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    changeTitleFormatLists(formatTodo, inputText);\n  };\n\n  useEffect(() => {\n    if (formatTodo) {\n      setActiveID(formatTodo.id);\n    }\n  }, [todoContainerToggle]);\n\n  useEffect(() => {\n    if (formatTodo) setInputText(formatTodo.text);\n  }, [formatTodo]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          value={inputText}\n          onChange={inputTextHandler}\n          type=\"text\"\n          className={styles.title_todolist}\n          onFocus={selectTextHandler}\n          size={10}\n          ref={myRef}\n        ></input>\n        <span onClick={selectTextHandler} className=\"edit-title-btn\">\n          <i className=\"fas fa-pencil-alt\"></i>\n        </span>\n      </form>\n      <div\n        className=\"inner-container\"\n        onClick={() => {\n          if (formatTodo && !todoContainerToggle) clickHandler(formatTodo.id);\n        }}\n      >\n        <ul className=\"todo-list\" key={formatTodo.id}>\n          {todos.map((todo) => (\n            <Todo key={todo.id} todos={todos} setTodos={setTodos} todo={todo} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\nexport default TodoList;\n","import React, { useEffect } from \"react\";\nimport Form from \"./Form\";\nimport TodoList from \"./TodoList\";\n\nconst Popup = ({\n  togglePop,\n  todos,\n  setTodos,\n  formatTodo,\n  todoContainerToggle,\n  deleteEmpty,\n  setActiveID,\n  editFormatList,\n  changeTitleFormatLists,\n}) => {\n  const handleClick = () => {\n    togglePop();\n    deleteEmpty();\n  };\n\n  // scroll to top of page\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <div className=\"popup_content\">\n      <span className=\"close\" onClick={handleClick}>\n        &times;\n      </span>\n      <div className=\"list-container\">\n        <Form todos={todos} setTodos={setTodos} />\n        <div className=\"todo-container\">\n          <TodoList\n            key={formatTodo.id}\n            todos={todos}\n            setTodos={setTodos}\n            todoContainerToggle={todoContainerToggle}\n            setActiveID={setActiveID}\n            editFormatList={editFormatList}\n            formatTodo={formatTodo}\n            changeTitleFormatLists={changeTitleFormatLists}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Popup;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.css\";\nimport AddListForm from \"./components/AddListForm\";\nimport Popup from \"./components/Popup\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  const [formatLists, setFormatLists] = useState([]);\n  const [todos, setTodos] = useState([]);\n  const [seen, setSeen] = useState(false);\n  const [todoContainerToggle, setTodoContainerToggle] = useState(false);\n  const [activeID, setActiveID] = useState(null);\n  const [edit, setEdit] = useState(false);\n  const [currentList, setCurrentList] = useState(null);\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"formatLists\", JSON.stringify(formatLists));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"formatLists\") === null) {\n      localStorage.setItem(\"formatLists\", JSON.stringify([]));\n    } else {\n      let localformatLists = JSON.parse(localStorage.getItem(\"formatLists\"));\n      setFormatLists(localformatLists);\n      if (localformatLists.length) setActiveID(localformatLists[0].id);\n    }\n  };\n  const togglePop = () => {\n    setSeen(!seen);\n    setTodos([]);\n    setActiveID(null);\n    setTodoContainerToggle(!todoContainerToggle);\n  };\n\n  const deleteEmpty = () => {\n    setFormatLists(formatLists.filter((el) => el.todos.length > 0));\n  };\n\n  const toggleEdit = () => {\n    if (currentList && currentList.todos.length > 0) {\n      setEdit(!edit);\n      setTodoContainerToggle(!todoContainerToggle);\n    }\n  };\n\n  const editFormatList = (id) => {\n    let formatList = formatLists.find((item) => item.id === id);\n    if (formatList && formatList.todos.length > 0) {\n      setCurrentList(formatList);\n      setTodos(formatList.todos);\n    }\n    toggleEdit();\n  };\n\n  const updateFormatLists = () => {\n    if (!todos && !todoContainerToggle) return;\n\n    if (activeID === null) return;\n\n    setFormatLists(\n      formatLists.map((item) => {\n        if (item.id === activeID) {\n          return {\n            ...item,\n            todos: [...todos],\n          };\n        }\n        return item;\n      })\n    );\n  };\n\n  const changeTitleFormatLists = useCallback((cur_formatTodo, text) => {\n    setFormatLists(\n      formatLists.map((item) => {\n        if (item.id === cur_formatTodo.id) {\n          return {\n            ...item,\n            text: text,\n          };\n        }\n        return item;\n      })\n    );\n  });\n\n  const updateCurrentList = () => {\n    if (!activeID) return;\n    let formatList = formatLists.find((item) => item.id === activeID);\n    if (formatList && formatList.todos.length > 0) {\n      setCurrentList(formatList);\n    }\n  };\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    updateFormatLists();\n  }, [todos]);\n\n  useEffect(() => {\n    saveLocalTodos();\n    updateCurrentList();\n  }, [formatLists]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo App</h1>\n      </header>\n      <AddListForm\n        formatLists={formatLists}\n        setFormatLists={setFormatLists}\n        togglePop={togglePop}\n      />\n\n      {seen ? (\n        <Popup\n          key={\"popup-1\"}\n          togglePop={togglePop}\n          todos={todos}\n          setTodos={setTodos}\n          formatTodo={formatLists[formatLists.length - 1]}\n          todoContainerToggle={todoContainerToggle}\n          deleteEmpty={deleteEmpty}\n          setActiveID={setActiveID}\n          editFormatList={editFormatList}\n          changeTitleFormatLists={changeTitleFormatLists}\n        />\n      ) : null}\n\n      <div>\n        <div\n          className={\n            todoContainerToggle ? `hide-window` : `format-list-container`\n          }\n        >\n          {!seen\n            ? formatLists.map((item, index) => (\n                <div className=\"formatLists-todo-container\" key={index}>\n                  <TodoList\n                    key={item.id}\n                    todos={item.todos}\n                    setTodos={setTodos}\n                    todoContainerToggle={todoContainerToggle}\n                    setActiveID={setActiveID}\n                    editFormatList={editFormatList}\n                    formatTodo={item}\n                    changeTitleFormatLists={changeTitleFormatLists}\n                  />\n                </div>\n              ))\n            : null}\n        </div>\n        {edit ? (\n          <Popup\n            key={\"popup-2\"}\n            togglePop={toggleEdit}\n            todos={currentList.todos}\n            setTodos={setTodos}\n            formatTodo={currentList}\n            todoContainerToggle={todoContainerToggle}\n            deleteEmpty={deleteEmpty}\n            editFormatList={editFormatList}\n            setActiveID={setActiveID}\n            changeTitleFormatLists={changeTitleFormatLists}\n          />\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_todo_list\":\"AddListForm_form_todo_list__28DwJ\"};"],"sourceRoot":""}